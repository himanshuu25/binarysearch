
#include<iostream>
using namespace std;
int bs(int *a,int n,int item){
    int low=0,high=n-1,mid;
    while(low<=high){
        mid=(low+high)/2;
        if(item<a[mid])
        high=mid-1;
        else if(item>a[mid])
        low=mid+1;
        else
        return mid;
    }
    return 0;
}
int main(){
    int a[]={5,8,9,11,25,52,63,70},n=8,item;  // array must be sorted;
    cout<<"enter the item";
    cin>>item;
    if(bs(a,n,item))
    cout<<"item is found";
    else
    cout<<"item is not found";
}



//======================>rotated sorted array
#include<iostream>
using namespace std;
int bs(int *a,int n,int low,int high,int item){
    while(low<high){
        int mid=(low+high)/2;
        if(item==a[mid])
        return 1;
        if(a[low]<a[mid]){
            if(item>a[low]&&item<a[mid])
            high=mid-1;
            else
            low=mid+1;
        }
        else{
            if(item>a[mid]&&item<a[high])
            high=mid-1;
            else
            low=mid+1;

        }
        }
        return 0;
}
int main(){
    int a[]={3,4,5,6,7,0,1,2},n=8,low=0,high=n-1,item=9;
    if(bs(a,n,low,high,item)){
        cout<<"item is found";
    }
    else
    cout<<"item is not found";
}


//===========================peak elementt using binary search

#include<iostream>
using namespace std;
int peak(int *a,int n,int l,int h){
    while(l<=h){
        int mid=(l+h)/2;
        if(a[mid]>a[mid-1]&&a[mid] >a[mid+1])
        return a[mid];
        else if(a[mid]>a[mid-1])
        l=mid+1;
        else
        h=mid-1;
    }
}
int main(){
    int a[]={0,2,1,0},n=4,l=0,h=n-1;
    cout<<"peek element is"<<peak(a,n,l,h);
}